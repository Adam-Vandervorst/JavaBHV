/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class BHV */

#ifndef _Included_BHV
#define _Included_BHV
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     BHV
 * Method:    randInto
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_BHV_randInto
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     BHV
 * Method:    randomInto
 * Signature: ([BF)V
 */
JNIEXPORT void JNICALL Java_BHV_randomInto
  (JNIEnv *, jclass, jbyteArray, jfloat);

/*
 * Class:     BHV
 * Method:    active
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_BHV_active
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     BHV
 * Method:    orInto
 * Signature: ([B[B[B)V
 */
JNIEXPORT void JNICALL Java_BHV_orInto
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     BHV
 * Method:    andInto
 * Signature: ([B[B[B)V
 */
JNIEXPORT void JNICALL Java_BHV_andInto
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     BHV
 * Method:    xorInto
 * Signature: ([B[B[B)V
 */
JNIEXPORT void JNICALL Java_BHV_xorInto
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     BHV
 * Method:    majorityInto
 * Signature: ([Ljava/lang/Object;[B)V
 */
JNIEXPORT void JNICALL Java_BHV_majorityInto
  (JNIEnv *, jclass, jobjectArray, jbyteArray);

/*
 * Class:     BHV
 * Method:    hamming
 * Signature: ([B[B)J
 */
JNIEXPORT jlong JNICALL Java_BHV_hamming
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     BHV
 * Method:    permuteInto
 * Signature: ([BJ[B)V
 */
JNIEXPORT void JNICALL Java_BHV_permuteInto
  (JNIEnv *, jclass, jbyteArray, jlong, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
